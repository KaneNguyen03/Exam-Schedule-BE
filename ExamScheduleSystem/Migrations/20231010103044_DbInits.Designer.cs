// <auto-generated />
using System;
using ExamScheduleSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamScheduleSystem.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231010103044_DbInits")]
    partial class DbInits
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ExamScheduleSystem.Model.Classroom", b =>
                {
                    b.Property<string>("ClassroomId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassroomId");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.ClassroomExamSchedule", b =>
                {
                    b.Property<string>("ExamScheduleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClassroomId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClassroomExamScheduleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExamScheduleId", "ClassroomId");

                    b.HasIndex("ClassroomId");

                    b.ToTable("ClassroomExamSchedules");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.Course", b =>
                {
                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemesterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentListId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.HasIndex("SemesterId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.CourseStudentList", b =>
                {
                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentListId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseStudentListId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId", "StudentListId");

                    b.HasIndex("StudentListId");

                    b.ToTable("CourseStudentLists");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.ExamSchedule", b =>
                {
                    b.Property<string>("ExamScheduleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClassroomId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamSlotId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExamScheduleId");

                    b.HasIndex("ExamSlotId");

                    b.ToTable("ExamSchedules");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.ExamSlot", b =>
                {
                    b.Property<string>("ExamSlotId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("ExamSlotName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProctoringId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExamSlotId");

                    b.HasIndex("CourseId");

                    b.ToTable("ExamSlots");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.ExamSlotProctoring", b =>
                {
                    b.Property<string>("ExamSlotId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProctoringId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExamSlotProctoringId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExamSlotId", "ProctoringId");

                    b.HasIndex("ProctoringId");

                    b.ToTable("ExamSlotProctorings");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.Major", b =>
                {
                    b.Property<string>("MajorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MajorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MajorId");

                    b.ToTable("Majors");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.Proctoring", b =>
                {
                    b.Property<string>("ProctoringId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Compensation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamSlotId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProctoringName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProctoringId");

                    b.ToTable("Proctorings");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.Role", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.Semester", b =>
                {
                    b.Property<string>("SemesterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MajorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SemesterId");

                    b.HasIndex("MajorId");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.StudentList", b =>
                {
                    b.Property<string>("StudentListId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentListId");

                    b.ToTable("StudentLists");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TokenCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime2");

                    b.HasKey("Username");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.ClassroomExamSchedule", b =>
                {
                    b.HasOne("ExamScheduleSystem.Model.Classroom", "Classroom")
                        .WithMany("ClassroomExamSchedules")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamScheduleSystem.Model.ExamSchedule", "ExamSchedule")
                        .WithMany("ClassroomExamSchedules")
                        .HasForeignKey("ExamScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("ExamSchedule");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.Course", b =>
                {
                    b.HasOne("ExamScheduleSystem.Model.Semester", "Semester")
                        .WithMany("Courses")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.CourseStudentList", b =>
                {
                    b.HasOne("ExamScheduleSystem.Model.Course", "Course")
                        .WithMany("CourseStudentLists")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamScheduleSystem.Model.StudentList", "StudentList")
                        .WithMany("CourseStudentLists")
                        .HasForeignKey("StudentListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("StudentList");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.ExamSchedule", b =>
                {
                    b.HasOne("ExamScheduleSystem.Model.ExamSlot", "ExamSlot")
                        .WithMany("ExamSchedules")
                        .HasForeignKey("ExamSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamSlot");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.ExamSlot", b =>
                {
                    b.HasOne("ExamScheduleSystem.Model.Course", "Course")
                        .WithMany("ExamSlots")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.ExamSlotProctoring", b =>
                {
                    b.HasOne("ExamScheduleSystem.Model.ExamSlot", "ExamSlot")
                        .WithMany("ExamSlotProctorings")
                        .HasForeignKey("ExamSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamScheduleSystem.Model.Proctoring", "Proctoring")
                        .WithMany("ExamSlotProctorings")
                        .HasForeignKey("ProctoringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamSlot");

                    b.Navigation("Proctoring");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.Semester", b =>
                {
                    b.HasOne("ExamScheduleSystem.Model.Major", null)
                        .WithMany("Semesters")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.User", b =>
                {
                    b.HasOne("ExamScheduleSystem.Model.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.Classroom", b =>
                {
                    b.Navigation("ClassroomExamSchedules");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.Course", b =>
                {
                    b.Navigation("CourseStudentLists");

                    b.Navigation("ExamSlots");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.ExamSchedule", b =>
                {
                    b.Navigation("ClassroomExamSchedules");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.ExamSlot", b =>
                {
                    b.Navigation("ExamSchedules");

                    b.Navigation("ExamSlotProctorings");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.Major", b =>
                {
                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.Proctoring", b =>
                {
                    b.Navigation("ExamSlotProctorings");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.Semester", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("ExamScheduleSystem.Model.StudentList", b =>
                {
                    b.Navigation("CourseStudentLists");
                });
#pragma warning restore 612, 618
        }
    }
}
